package javaapplication1;

import javax.swing.*;
import java.awt.*;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;

public class PayementResa extends JFrame {

    private final JTextField txtMontant = new JTextField(10);
    private final JTextField txtCardHolder = new PreRemplissage("Entrez votre Nom");
    private final JTextField txtCardNumber = new PreRemplissage("0000 0000 0000 0000");
    private final JTextField txtCVV = new PreRemplissage("123");
    private final JTextField txtExpiry = new PreRemplissage("MM/AA");
    private final JTextField txtCodePromo = new JTextField(12);
    private final JButton btnPayer = new JButton(" Payer");
    private final JComboBox<String> comboPaymentMethod = new JComboBox<>(new String[]{"PayPal", "Mastercard", "Visa"});

    public PayementResa() {
        setTitle("Paiement");
        setExtendedState(JFrame.MAXIMIZED_BOTH); // Plein écran
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        getContentPane().setBackground(new Color(245, 245, 245));
        setLayout(new BorderLayout());

        add(Booking(), BorderLayout.NORTH);

        JPanel mainContainer = new JPanel();
        getContentPane().setBackground(new Color(245, 245, 245));
        mainContainer.setLayout(new GridBagLayout());
  
        JPanel centre = new JPanel();
        centre.setLayout(new BoxLayout(centre, BoxLayout.Y_AXIS));
        centre.setBackground(Color.WHITE);
        centre.setMaximumSize(new Dimension(600, 500));
        centre.add(PanelPayement());  
        mainContainer.add(centre);
        add(mainContainer, BorderLayout.CENTER);

        btnPayer.addActionListener(e -> {
            if (validerChamps()) {
                JOptionPane.showMessageDialog(this, "Paiement effectué avec succès ! \n Vous recevrez votre reservations par mail ou allez dans Acceuil -> Mes réservations", "Payement validé", JOptionPane.INFORMATION_MESSAGE);
            }
        });

        setVisible(true);
    }

    private JPanel Booking() {
        JPanel topBar = new JPanel(new BorderLayout());
        topBar.setBackground(new Color(0,0, 255)); 
        topBar.setBorder(BorderFactory.createEmptyBorder(15, 30, 15, 30));

        JLabel title = new JLabel("Booking.com");
        title.setFont(new Font("SansSerif", Font.BOLD, 25));
        title.setForeground(Color.WHITE);
        topBar.add(title, BorderLayout.WEST);
        
        JButton btnRetour = new JButton("Retour à l'accueil");
        btnRetour.setFocusPainted(false);
        btnRetour.setBackground(new Color(255,255,255));
        btnRetour.setForeground(Color.BLUE);
        btnRetour.setFont(new Font("SansSerif", Font.BOLD, 16));
        btnRetour.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnRetour.setPreferredSize(new Dimension(180, 40));
        btnRetour.addActionListener(e -> {
            dispose();
            new Acceuil(); // VIGGO METS ICI LE NOM DE TA CLASSE POUR REVENIR A L ACCEUIL
        });

        topBar.add(btnRetour, BorderLayout.EAST);
        return topBar;
    }

    private JPanel PanelPayement() {

    JPanel panel = new JPanel();
    panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
    panel.setBackground(Color.WHITE);
    panel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createLineBorder(new Color(200, 200, 200)), BorderFactory.createEmptyBorder(30, 50, 30, 50)));
    
    JLabel titre = new JLabel("Paiement");
    titre.setFont(new Font("SansSerif", Font.BOLD, 36));
    titre.setAlignmentX(Component.CENTER_ALIGNMENT);
    titre.setForeground(new Color(20, 20, 20));
    panel.add(titre);

    panel.add(Box.createVerticalStrut(40)); // Espace après le titre
    JPanel formPanel = new JPanel(new GridBagLayout());
    formPanel.setBackground(Color.WHITE);
    GridBagConstraints g = new GridBagConstraints();
    g.insets = new Insets(15, 15, 15, 15);
    g.anchor = GridBagConstraints.LINE_END;

    comboPaymentMethod.setFont(new Font("SansSerif", Font.PLAIN, 14));
    txtCardHolder.setFont(new Font("SansSerif", Font.PLAIN, 14));
    txtCardNumber.setFont(new Font("SansSerif", Font.PLAIN, 14));
    txtCVV.setFont(new Font("SansSerif", Font.PLAIN, 14));
    txtExpiry.setFont(new Font("SansSerif", Font.PLAIN, 14));
    int row = 0;

    addRow(formPanel, g, row++, "Méthode de paiement :", comboPaymentMethod);
    addRow(formPanel, g, row++, "Nom du titulaire :", txtCardHolder);
    addRow(formPanel, g, row++, "Numéro de carte :", txtCardNumber);
    addRow(formPanel, g, row++, "CVC :", txtCVV);
    addRow(formPanel, g, row++, "Date expiration :", txtExpiry);

    panel.add(formPanel);
    panel.add(Box.createVerticalStrut(20));
    panel.add(LignePayement());
    return panel;
}

    private JPanel LignePayement() {
        JPanel line = new JPanel(new FlowLayout(FlowLayout.CENTER, 20, 0));
        line.setOpaque(false);
        line.setBackground(Color.WHITE);
        line.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));

        txtCodePromo.setFont(new Font("SansSerif", Font.PLAIN, 14));
        txtMontant.setFont(new Font("SansSerif", Font.BOLD, 16));
        btnPayer.setFont(new Font("SansSerif", Font.BOLD, 16));
        btnPayer.setBackground(new Color(0, 102, 204));
        btnPayer.setForeground(Color.WHITE);
        btnPayer.setFocusPainted(false);
        btnPayer.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));

        line.add(new JLabel("Code promo :"));
        line.add(txtCodePromo);
        line.add(new JLabel("Montant :"));
        line.add(txtMontant);
        line.add(btnPayer);
        return line;
    }

    private static void addRow(JPanel p, GridBagConstraints g, int row, String label, JComponent comp) {
        g.gridx = 0;
        g.gridy = row;
        g.anchor = GridBagConstraints.LINE_END;

        JLabel lbl = new JLabel(label);
        lbl.setFont(new Font("SansSerif", Font.BOLD, 14));
        p.add(lbl, g);

        g.gridx = 1;
        g.anchor = GridBagConstraints.LINE_START;
        comp.setPreferredSize(new Dimension(200, 30));
        p.add(comp, g);
    }
    private boolean validerChamps() {
    String nom = txtCardHolder.getText().trim();
    if (nom.isEmpty() || nom.equals("Entrez votre Nom") || !nom.matches("[a-zA-ZÀ-ÿ\\s'-]+")) {
        JOptionPane.showMessageDialog(this, "Veuillez entrer un nom valide.", "Erreur", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    String numeroCarte = txtCardNumber.getText().replaceAll("\\s+", "");
    if (numeroCarte.isEmpty() || txtCardNumber.getText().equals("0000 0000 0000 0000") || !numeroCarte.matches("\\d{16}")) {
        JOptionPane.showMessageDialog(this, "Veuillez entrer un numéro de carte valide (16 chiffres).", "Erreur", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    String cvv = txtCVV.getText().trim();
    if (cvv.isEmpty() || cvv.equals("123") || !cvv.matches("\\d{3}")) {
        JOptionPane.showMessageDialog(this, "Veuillez entrer un CVC valide (3 chiffres).", "Erreur", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    String expiration = txtExpiry.getText().trim();
    if (expiration.isEmpty() || expiration.equals("MM/AA") || !expiration.matches("(0[1-9]|1[0-2])/\\d{2}")) {
        JOptionPane.showMessageDialog(this, "Veuillez entrer une date d'expiration valide (MM/AA).", "Erreur", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    return true;
}

    static class PreRemplissage extends JTextField {
        private final String placeholder;

        public PreRemplissage(String placeholder) {
            super(placeholder);
            this.placeholder = placeholder;
            setForeground(Color.GRAY);

            this.addFocusListener(new FocusAdapter() {
                public void focusGained(FocusEvent e) {
                    if (getText().equals(placeholder)) {
                        setText("");
                        setForeground(Color.BLACK);
                    }
                }
                public void focusLost(FocusEvent e) {
                    if (getText().isEmpty()) {
                        setText(placeholder);
                        setForeground(Color.GRAY);
                    }
                }
            });
        }
    }
}
